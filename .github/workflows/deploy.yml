name: Deploy to Heroku

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Клонируем код
      - name: Checkout code
        uses: actions/checkout@v2

      # Устанавливаем Docker Compose
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Создаем .env файл для сервера из секретов
      - name: Create .env file for server
        env:
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          SERVER_WS_PORT: ${{ secrets.SERVER_WS_PORT }}
        run: |
          echo "PORT=$SERVER_PORT" > ./server/.env
          echo "WS_PORT=$SERVER_WS_PORT" >> ./server/.env

      # Создаем .env файл для клиента из секретов
      - name: Create .env file for client
        env:
          CLIENT_WS_URL: ${{ secrets.CLIENT_WS_URL }}
          CLIENT_IMAGES_URL: ${{ secrets.CLIENT_IMAGES_URL }}
        run: |
          echo "VUE_APP_WS_URL=$CLIENT_WS_URL" > ./client/.env
          echo "VUE_APP_IMAGES_URL=$CLIENT_IMAGES_URL" >> ./client/.env

      # Логинимся в Heroku
      - name: Login to Heroku Container Registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
        run: |
          echo $HEROKU_API_KEY | docker login --username=$HEROKU_EMAIL --password-stdin registry.heroku.com

      # Сборка и отправка образа
      - name: Build and Push Docker image to Heroku
        env:
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: |
          docker-compose -f docker-compose.yml build
          docker tag orders-products-app_web registry.heroku.com/$HEROKU_APP_NAME/web
          docker push registry.heroku.com/$HEROKU_APP_NAME/web

      # Релиз приложения
      - name: Release the Heroku app
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: |
          heroku container:release web --app $HEROKU_APP_NAME
